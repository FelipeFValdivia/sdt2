# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import control_pb2 as control__pb2


class ControlStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetLane = channel.unary_unary(
        '/Control/GetLane',
        request_serializer=control__pb2.Lane.SerializeToString,
        response_deserializer=control__pb2.Lane.FromString,
        )
    self.GetOutLane = channel.unary_unary(
        '/Control/GetOutLane',
        request_serializer=control__pb2.Lane.SerializeToString,
        response_deserializer=control__pb2.Lane.FromString,
        )
    self.SendAirplaneName = channel.unary_unary(
        '/Control/SendAirplaneName',
        request_serializer=control__pb2.Name.SerializeToString,
        response_deserializer=control__pb2.Lane.FromString,
        )
    self.SendDestination = channel.unary_unary(
        '/Control/SendDestination',
        request_serializer=control__pb2.Name.SerializeToString,
        response_deserializer=control__pb2.Name.FromString,
        )
    self.CheckPassengerAndFuell = channel.unary_unary(
        '/Control/CheckPassengerAndFuell',
        request_serializer=control__pb2.FuellDestination.SerializeToString,
        response_deserializer=control__pb2.Name.FromString,
        )
    self.CheckRunway = channel.unary_unary(
        '/Control/CheckRunway',
        request_serializer=control__pb2.Name.SerializeToString,
        response_deserializer=control__pb2.Lane.FromString,
        )
    self.GetOutRunway = channel.unary_unary(
        '/Control/GetOutRunway',
        request_serializer=control__pb2.Lane.SerializeToString,
        response_deserializer=control__pb2.Lane.FromString,
        )


class ControlServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetLane(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOutLane(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendAirplaneName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendDestination(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CheckPassengerAndFuell(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CheckRunway(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOutRunway(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ControlServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetLane': grpc.unary_unary_rpc_method_handler(
          servicer.GetLane,
          request_deserializer=control__pb2.Lane.FromString,
          response_serializer=control__pb2.Lane.SerializeToString,
      ),
      'GetOutLane': grpc.unary_unary_rpc_method_handler(
          servicer.GetOutLane,
          request_deserializer=control__pb2.Lane.FromString,
          response_serializer=control__pb2.Lane.SerializeToString,
      ),
      'SendAirplaneName': grpc.unary_unary_rpc_method_handler(
          servicer.SendAirplaneName,
          request_deserializer=control__pb2.Name.FromString,
          response_serializer=control__pb2.Lane.SerializeToString,
      ),
      'SendDestination': grpc.unary_unary_rpc_method_handler(
          servicer.SendDestination,
          request_deserializer=control__pb2.Name.FromString,
          response_serializer=control__pb2.Name.SerializeToString,
      ),
      'CheckPassengerAndFuell': grpc.unary_unary_rpc_method_handler(
          servicer.CheckPassengerAndFuell,
          request_deserializer=control__pb2.FuellDestination.FromString,
          response_serializer=control__pb2.Name.SerializeToString,
      ),
      'CheckRunway': grpc.unary_unary_rpc_method_handler(
          servicer.CheckRunway,
          request_deserializer=control__pb2.Name.FromString,
          response_serializer=control__pb2.Lane.SerializeToString,
      ),
      'GetOutRunway': grpc.unary_unary_rpc_method_handler(
          servicer.GetOutRunway,
          request_deserializer=control__pb2.Lane.FromString,
          response_serializer=control__pb2.Lane.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Control', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
